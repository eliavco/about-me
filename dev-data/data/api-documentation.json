{
    "title": "Api Documentation 👍",
    "versions": {
        "1": {
            "tours": {
                "getAll": "To access all tours send request to '/api/v1/tours' using GET method",
                "getById": "To access a certain tour by its ID, add the ID as a new slash '/api/v1/tours/:id' using GET method",

                "getFiltered-1": "To access all tours matching a certain query where properties equal other properties send request to '/api/v1/tours' using GET method and add your query at the end starting with a question mark and then key value pairs: '?key=value&price=997'",
                "getFiltered-2": "To access all tours matching a certain query where properties relate to other properties send request to '/api/v1/tours' using GET method and add your advanced query at the end starting with a question mark and then key value pairs with the right operator in square brackets: '?key=value&price[gt]=997', your options are: (NO_BRACKETS - equals =), (gt - greater than >), (lt - less than <), (gte - greater than or equals >=), (lte - less than or equals <=)",
                "getFiltered-3": "To access all tours matching a certain mongoose query send request to '/api/v1/tours' using GET method and add your mongoose advanced query as a body element attached to the request and specify a new property with the key 'query' and the value 1, before sending, omit all mongoose operators ('$'). To learn more about how to build a mongoose query go to 'www.mongoosejs.com/docs' to get help.",
                
                "sort": "Create a query like in 'getFiltered-2', if you already have a query add the key 'sort', and then the property you want to sort by, if you want to add more properties to sort by, add them separated by commas, if you want to sort descendingly by a property, add a minus sign before the property",
                "fields": "If you want to get only specific fields, create a query like in 'getFiltered-2', if you already have a query just add the key 'fields', and then the property you want to get, if you want to add more properties, add them separated by commas, if you want to exclude fields instead by a property add a minus sign before the properties",
                
                "pagination": "The default behavior of the api is to send only the first 100 results, you can manipulate it though. If you want to get only a limited number of documents, create a query like in 'getFiltered-2', if you already have a query add the key 'page', and then the page you want to get (each page contains 100 results by default). If you want to change the number of results you get per page, add the number to the property 'limit'",

                "create": "To create a new tour send request to '/api/v1/tours' using the POST method, send along a JSON object in body with new properties for object",
                "update": "To update a certain tour send request to '/api/v1/tours', specify the id in a new slash and use the PATCH method, send along a JSON object in body with new properties for object",
                "delete": "To delete a certain tour send request to '/api/v1/tours', specify the id in a new slash and use the DELETE method",
                
                "aggregate": "To access tours statistics send request to '/api/v1/tours/stats' using GET method, add your JSON aggregation array as a request.body.stages! For more information about aggregation object go to MongoDB and Mongoose documentations online."
            }
        }
    }
}